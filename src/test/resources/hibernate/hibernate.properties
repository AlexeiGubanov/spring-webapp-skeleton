## Hibernate properties

# JDBC URL
hibernate.connection.url = ${jdbc.url}
# JDBC driver class
hibernate.connection.driver_class = ${jdbc.driverClassName}
# database user
hibernate.connection.username = ${jdbc.username}
# database user password
hibernate.connection.password = ${jdbc.password}

# The classname of a Hibernate org.hibernate.dialect.Dialect which allows Hibernate to generate SQL optimized for a particular relational database
#hibernate.dialect = org.hibernate.dialect.H2Dialect
hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# c3p0 (org.hibernate.connection.C3P0ConnectionProvider) connection pool settings
hibernate.c3p0.min_size = 5
hibernate.c3p0.max_size = 100
hibernate.c3p0.timeout = 1800
hibernate.c3p0.max_statements = 50
hibernate.c3p0.idle_test_period = 3000

# The classname of a custom CacheProvider.
hibernate.cache.provider_class = org.hibernate.cache.EhCacheProvider
# Can be used to completely disable the second level cache, which is enabled by default for classes which specify a <cache> mapping
hibernate.cache.use_second_level_cache = false
# Enables the query cache. Individual queries still have to be set cachable
hibernate.cache.use_query_cache = false
# Optimizes second-level cache operation to minimize writes, at the cost of more frequent reads.
# This setting is most useful for clustered caches and, in Hibernate3, is enabled by default for clustered cache implementations
hibernate.cache.use_minimal_puts = false

# Sets a maximum "depth" for the outer join fetch tree for single-ended associations (one-to-one, many-to-one). A 0 disables default outer join fetching
hibernate.max_fetch_depth = 3

# Sets a default size for Hibernate batch fetching of associations. e.g. recommended values 4, 8, 16
#hibernate.default_batch_fetch_size = 4
# Sets a default mode for entity representation for all sessions opened from this SessionFactory: dynamic-map, dom4j, pojo
#hibernate.default_entity_mode

# Forces Hibernate to order SQL updates by the primary key value of the items being updated. This will result in fewer transaction deadlocks in highly concurrent systems
# hibernate.order_updates

# Write all SQL statements to console. This is an alternative to setting the log category org.hibernate.SQL to debug
hibernate.show_sql = false
# Pretty print the SQL in the log and console
hibernate.format_sql = true
# If turned on, Hibernate will generate comments inside the SQL, for easier debugging, defaults to false.
hibernate.use_sql_comments = false

# If enabled, Hibernate will collect statistics useful for performance tuning. e.g. true | false
#hibernate.generate_statistics = true

# Qualify unqualified table names with the given schema/tablespace in generated SQL
#hibernate.default_schema = SCHEMA_NAME
# Qualifies unqualified table names with the given catalog in generated SQL
#hibernate.default_catalog = CATALOG_NAME

# Supply a custom strategy for the scoping of the "current" Session
#hibernate.current_session_context_class = thread

# Automatically validates or exports schema DDL to the database when the SessionFactory is created.
# With create-drop, the database schema will be dropped when the SessionFactory is closed explicitly.
# e.g. validate | update | create | create-drop
#hibernate.hbm2ddl.auto = create-drop
hibernate.hbm2ddl.auto = update